{"ast":null,"code":"var _jsxFileName = \"X:\\\\gectorai-web\\\\src\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\"; // We'll add styles for the chat here.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // Chat messages\n  const [input, setInput] = useState(\"\"); // User input\n  const [isLoading, setIsLoading] = useState(false); // Loading state for AI response\n\n  const sendMessage = async () => {\n    if (!input.trim()) return; // Skip empty messages\n\n    // Add user's message to the chat\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\"); // Clear input\n    setIsLoading(true);\n    try {\n      // Call your AI API (replace the URL with your backend endpoint)\n      const response = await axios.post(\"/api/chat\", {\n        message: input\n      });\n\n      // Add AI's response to the chat\n      const aiMessage = {\n        sender: \"ai\",\n        text: response.data.reply\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error(\"Error fetching AI response:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"ai\",\n        text: \"Sorry, something went wrong!\"\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \" This is a message!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"ChatGPT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \" Hello! How can I help you today?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"OjPvdQps2GsUGE4SUl5r1IcLShE=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","sendMessage","trim","userMessage","sender","text","prev","response","post","message","aiMessage","data","reply","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["X:/gectorai-web/src/chat.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\"; // We'll add styles for the chat here.\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]); // Chat messages\r\n  const [input, setInput] = useState(\"\"); // User input\r\n  const [isLoading, setIsLoading] = useState(false); // Loading state for AI response\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return; // Skip empty messages\r\n\r\n    // Add user's message to the chat\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput(\"\"); // Clear input\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Call your AI API (replace the URL with your backend endpoint)\r\n      const response = await axios.post(\"/api/chat\", { message: input });\r\n\r\n      // Add AI's response to the chat\r\n      const aiMessage = { sender: \"ai\", text: response.data.reply };\r\n      setMessages((prev) => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching AI response:\", error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"ai\", text: \"Sorry, something went wrong!\" },\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-box\">\r\n        {/* Render chat messages here */}\r\n        <div className=\"message\">\r\n          <strong>User:</strong> This is a message!\r\n        </div>\r\n        <div className=\"message\">\r\n          <strong>ChatGPT:</strong> Hello! How can I help you today?\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input type=\"text\" placeholder=\"Type your message...\" />\r\n        <button>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}